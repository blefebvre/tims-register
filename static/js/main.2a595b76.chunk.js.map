{"version":3,"sources":["reducers/order.ts","reducers/rootReducer.ts","constants/ActionTypes.ts","actions/index.ts","components/Button.tsx","components/Numpad.tsx","hooks/KeyboardEvent.ts","components/FoodItems.tsx","components/ExtraButtons.tsx","containers/OrderDetails.ts","components/OrderDetails.tsx","containers/TimsRegister.ts","components/TimsRegister.tsx","App.tsx","serviceWorker.js","index.js"],"names":["emptyOrder","items","total","cash","change","initialState","Object","objectSpread","history","getTotalCostOfItems","reduce","previousValue","item","price","getChangeDue","toString","rootReducer","combineReducers","order","state","arguments","length","undefined","action","type","updatedItems","concat","toConsumableArray","payload","totalWithItemAdded","lastItemRemoved","slice","totalWithItemRemoved","currentOrder","addItemToCurrentOrder","voidLastItem","processPayment","completeOrder","Button","React","memo","props","children","className","onClick","keyRef","react_default","a","createElement","ref","Numpad","keys","callback","regularWidthKeys","doubleWidthKeys","key","keyPress","useEffect","handler","event","includes","window","addEventListener","removeEventListener","getButton","text","Button_Button","_","keyValue","map","FoodItems","itemSelected","renderButton","title","ExtraButtons","itemVoid","console","log","connect","Fragment","id","index","dispatch","bindActionCreators","_useState","useState","_useState2","slicedToArray","numpadValue","setNumpadValue","_useState3","_useState4","numpadString","setNumpadString","containers_OrderDetails","FoodItems_FoodItems","ExtraButtons_ExtraButtons","Numpad_Numpad","updatedNumpadString","substring","valueStr","valueWithDecimalPlace","parseFloat","e","getFloatFromNumpadString","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","store","createStore","es","containers_TimsRegister","Component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2a595b76.chunk.js","sourcesContent":["import { FoodItem } from \"../models/FoodItem\";\nimport {\n  ADD_ITEM,\n  REMOVE_LAST_ITEM,\n  PROCESS_PAYMENT,\n  COMPLETE_ORDER,\n} from \"../constants/ActionTypes\";\nimport { RegisterActionTypes } from \"../actions\";\n\ninterface FoodOrder {\n  items: FoodItem[];\n  total: number;\n  cash: number;\n  change: string;\n}\n\ninterface OrderHistory {\n  history: FoodOrder[];\n}\n\nconst emptyOrder: FoodOrder = {\n  items: [],\n  total: 0,\n  cash: 0,\n  change: \"-\",\n};\n\nconst initialState: FoodOrder & OrderHistory = {\n  ...emptyOrder,\n  history: [],\n};\n\nexport type Order = typeof initialState;\n\nexport const order = (\n  state = initialState,\n  action: RegisterActionTypes\n): Order => {\n  switch (action.type) {\n    case ADD_ITEM:\n      const updatedItems = [...state.items, action.payload];\n      const totalWithItemAdded = getTotalCostOfItems(updatedItems);\n      return {\n        items: updatedItems,\n        total: totalWithItemAdded,\n        cash: state.cash,\n        change: getChangeDue(totalWithItemAdded, state.cash),\n        history: state.history,\n      };\n    case REMOVE_LAST_ITEM:\n      const lastItemRemoved = state.items.slice(0, state.items.length - 1);\n      const totalWithItemRemoved = getTotalCostOfItems(lastItemRemoved);\n      return {\n        items: lastItemRemoved,\n        total: totalWithItemRemoved,\n        cash: state.cash,\n        change: getChangeDue(totalWithItemRemoved, state.cash),\n        history: state.history,\n      };\n    case PROCESS_PAYMENT:\n      const cash = action.payload;\n      const total = state.total;\n      return {\n        items: state.items,\n        total,\n        cash,\n        change: getChangeDue(total, cash),\n        history: state.history,\n      };\n    case COMPLETE_ORDER:\n      const currentOrder: FoodOrder = {\n        items: [...state.items],\n        total: state.total,\n        cash: state.cash,\n        change: state.change,\n      };\n      return {\n        ...emptyOrder,\n        history: [...state.history, currentOrder],\n      };\n    default:\n      return state;\n  }\n};\n\nfunction getTotalCostOfItems(items: FoodItem[]): number {\n  return items.reduce((previousValue: number, item: FoodItem) => {\n    // TODO: Big.js\n    if (item.price) {\n      return previousValue + item.price;\n    } else {\n      return previousValue;\n    }\n  }, 0);\n}\n\nfunction getChangeDue(total: number, cash: number): string {\n  if (cash <= 0) {\n    return initialState.change;\n  }\n  return (cash - total).toString();\n}\n","import { Reducer, combineReducers } from \"redux\";\nimport { order, Order } from \"./order\";\n\nexport interface AppState {\n  order: Order;\n}\n\nexport const rootReducer: Reducer = combineReducers({\n  order,\n});\n","// Action types\n\nexport const ADD_ITEM = \"ADD_ITEM\";\nexport const REMOVE_LAST_ITEM = \"REMOVE_LAST_ITEM\";\nexport const PROCESS_PAYMENT = \"PROCESS_PAYMENT\";\nexport const COMPLETE_ORDER = \"COMPLETE_ORDER\";\n","import * as types from \"../constants/ActionTypes\";\nimport { FoodItem } from \"../models/FoodItem\";\n\n// Actions\n\nexport interface OrderAction {\n  type: typeof types.ADD_ITEM;\n  payload: FoodItem;\n}\n\nexport interface VoidAction {\n  type: typeof types.REMOVE_LAST_ITEM;\n}\n\nexport interface PaymentAction {\n  type: typeof types.PROCESS_PAYMENT;\n  payload: number;\n}\n\nexport interface CompleteOrderAction {\n  type: typeof types.COMPLETE_ORDER;\n}\n\nexport type RegisterActionTypes =\n  | OrderAction\n  | VoidAction\n  | PaymentAction\n  | CompleteOrderAction;\n\nexport const addItemToCurrentOrder = (item: FoodItem): RegisterActionTypes => {\n  return {\n    type: types.ADD_ITEM,\n    payload: item,\n  };\n};\n\nexport const voidLastItem = (): RegisterActionTypes => {\n  return {\n    type: types.REMOVE_LAST_ITEM,\n  };\n};\n\nexport const processPayment = (cash: number): RegisterActionTypes => {\n  return {\n    type: types.PROCESS_PAYMENT,\n    payload: cash,\n  };\n};\n\nexport const completeOrder = (): RegisterActionTypes => {\n  return {\n    type: types.COMPLETE_ORDER,\n  };\n};\n","import React from \"react\";\nimport \"./Button.css\";\n\ninterface Props {\n  onClick(event: React.MouseEvent<HTMLButtonElement, MouseEvent>): void;\n  className?: string;\n  keyRef?: any;\n}\n\nexport const Button: React.FC<Props> = React.memo((props) => {\n  const { children, className, onClick, keyRef } = props;\n  return (\n    <button\n      onClick={onClick}\n      className={`Button ${className ? className : \"\"}`}\n      ref={keyRef}\n    >\n      {children}\n    </button>\n  );\n});\n","import React from \"react\";\nimport { Button } from \"./Button\";\n\nimport \"./Numpad.css\";\nimport { useKeyboardEvent } from \"../hooks/KeyboardEvent\";\n\ninterface Props {\n  keyPress(keyValue: string): void;\n}\n\nexport const Numpad: React.FC<Props> = (props) => {\n  // Render the keypad\n  const regularWidthKeys = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"Del\"];\n  const doubleWidthKeys = [\"0\"];\n\n  // Add keypress listeners\n  useKeyboardEvent([...regularWidthKeys, ...doubleWidthKeys], (key) => {\n    // Click the key\n    props.keyPress(key);\n  });\n\n  const keyClicked = (keyValue: string) => {\n    props.keyPress(keyValue);\n  };\n\n  const getButton = (text: string, className?: string) => {\n    return (\n      <Button\n        key={text}\n        onClick={(_) => keyClicked(text)}\n        className={className ? className : \"\"}\n      >\n        {text}\n      </Button>\n    );\n  };\n\n  return (\n    <div className=\"Numpad\">\n      {regularWidthKeys.map((keyValue: string) => getButton(keyValue))}\n      {doubleWidthKeys.map((keyValue: string) =>\n        getButton(keyValue, \"two-col\")\n      )}\n    </div>\n  );\n};\n","import { useEffect } from \"react\";\n\n// Hook implementation inspired by https://medium.com/@nicolaslopezj/reusing-logic-with-react-hooks-8e691f7352fa\nexport function useKeyboardEvent(\n  keys: string[],\n  callback: (key: string) => void\n) {\n  useEffect(() => {\n    const handler = function(event: any) {\n      const key = event.key;\n      if (key) {\n        if (keys.includes(key)) {\n          // Fire the callback with the given key\n          callback(key);\n        }\n        // Special case for Del key (map to Backspace)\n        const deleteKey = \"Del\";\n        if (key === \"Backspace\" && keys.includes(deleteKey)) {\n          callback(deleteKey);\n        }\n      }\n    };\n    window.addEventListener(\"keydown\", handler);\n    return () => {\n      window.removeEventListener(\"keydown\", handler);\n    };\n  });\n}\n","import React from \"react\";\nimport { FoodItem } from \"../models/FoodItem\";\nimport { Button } from \"./Button\";\n\nimport \"./FoodItems.css\";\n\ninterface Props {\n  itemSelected(item: FoodItem): void;\n}\n\nexport const FoodItems: React.FC<Props> = (props) => {\n  const { itemSelected } = props;\n\n  const coffeeAddons: FoodItem[] = [\n    {\n      title: \"4x4\",\n      price: 0,\n    },\n    {\n      title: \"Triple Triple\",\n      price: 0,\n    },\n    {\n      title: \"Double Double\",\n      price: 0,\n    },\n    {\n      title: \"Regular\",\n      price: 0,\n    },\n  ];\n\n  const darkRoast: FoodItem[] = [\n    {\n      title: \"SM Dark Roast\",\n      price: 1.05,\n    },\n    {\n      title: \"MD Dark Roast\",\n      price: 1.17,\n    },\n    {\n      title: \"LG Dark Roast\",\n      price: 1.31,\n    },\n    {\n      title: \"XL Dark Roast\",\n      price: 1.49,\n    },\n  ];\n\n  const originalBlend: FoodItem[] = [\n    {\n      title: \"SM Orig Blend\",\n      price: 1.05,\n    },\n    {\n      title: \"MD Orig Blend\",\n      price: 1.17,\n    },\n    {\n      title: \"LG Orig Blend\",\n      price: 1.31,\n    },\n    {\n      title: \"XL Orig Blend\",\n      price: 1.49,\n    },\n  ];\n\n  const renderButton = (item: FoodItem, className: string) => {\n    return (\n      <Button\n        key={item.title}\n        onClick={() => itemSelected(item)}\n        className={className}\n      >\n        {item.title}\n      </Button>\n    );\n  };\n\n  return (\n    <div className=\"FoodItems\">\n      {coffeeAddons.map((item) => renderButton(item, \"coffee-addons\"))}\n      {darkRoast.map((item) => renderButton(item, \"dark-roast\"))}\n      {originalBlend.map((item) => renderButton(item, \"original-blend\"))}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Button } from \"./Button\";\n\ninterface Props {\n  itemVoid(): void;\n  completeOrder(): void;\n}\n\nexport const ExtraButtons: React.FC<Props> = (props) => {\n  return (\n    <div className=\"ExtraButtons\">\n      <Button onClick={() => props.itemVoid()} className=\"item-void two-col\">\n        Item Void\n      </Button>\n      <Button onClick={() => console.log(\"Eat In\")} className=\"eat-in\">\n        Eat In\n      </Button>\n      <Button onClick={() => props.completeOrder()} className=\"complete-order\">\n        Complete Order\n      </Button>\n    </div>\n  );\n};\n","import { connect } from \"react-redux\";\nimport { OrderDetails } from \"../components/OrderDetails\";\nimport { AppState } from \"../reducers/rootReducer\";\n\nconst mapStateToProps = (state: AppState) => ({\n  order: state.order,\n});\n\nexport type OrderDetailsContainerProps = ReturnType<typeof mapStateToProps>;\n\nexport default connect(mapStateToProps)(OrderDetails);\n","import React from \"react\";\nimport { OrderDetailsContainerProps } from \"../containers/OrderDetails\";\nimport \"./OrderDetails.css\";\n\ninterface Props {}\n\nexport const OrderDetails: React.FC<Props & OrderDetailsContainerProps> = (\n  props\n) => {\n  const { order } = props;\n  return (\n    <>\n      <div id=\"current-order\" className=\"order-details\">\n        {order.items.map((item, index) => (\n          <div key={`item${index}`}>{item.title}</div>\n        ))}\n      </div>\n      <div id=\"last-order\" className=\"order-details\">\n        {order.history.length >= 1 &&\n          order.history[order.history.length - 1].items.map((item, index) => (\n            <div key={`item${index}`}>{item.title}</div>\n          ))}\n      </div>\n      <div id=\"second-last-order\" className=\"order-details\">\n        {order.history.length >= 2 &&\n          order.history[order.history.length - 2].items.map((item, index) => (\n            <div key={`item${index}`}>{item.title}</div>\n          ))}\n      </div>\n    </>\n  );\n};\n","import { connect } from \"react-redux\";\nimport { bindActionCreators, Dispatch } from \"redux\";\nimport {\n  addItemToCurrentOrder,\n  voidLastItem,\n  processPayment,\n  completeOrder,\n} from \"../actions\";\nimport { AppState } from \"../reducers/rootReducer\";\nimport { TimsRegister } from \"../components/TimsRegister\";\n\nconst mapStateToProps = (state: AppState) => ({\n  order: state.order,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) =>\n  bindActionCreators(\n    {\n      addItemToCurrentOrder,\n      voidLastItem,\n      processPayment,\n      completeOrder,\n    },\n    dispatch\n  );\n\nexport type TimsRegisterContainerProps = ReturnType<typeof mapStateToProps> &\n  ReturnType<typeof mapDispatchToProps>;\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TimsRegister);\n","import React, { Component, useState } from \"react\";\nimport { Numpad } from \"./Numpad\";\nimport { FoodItems } from \"./FoodItems\";\nimport { ExtraButtons } from \"./ExtraButtons\";\n\nimport \"./TimsRegister.css\";\nimport { FoodItem } from \"../models/FoodItem\";\nimport OrderDetails from \"../containers/OrderDetails\";\nimport { TimsRegisterContainerProps } from \"../containers/TimsRegister\";\nimport { Button } from \"./Button\";\n\nexport const TimsRegister: React.FC<TimsRegisterContainerProps> = (props) => {\n  const [numpadValue, setNumpadValue] = useState(0);\n  const [numpadString, setNumpadString] = useState(\"\");\n\n  const getFloatFromNumpadString = (valueStr: string): number => {\n    let valueWithDecimalPlace = valueStr;\n    // Put a decimal place at the right spot\n    switch (valueStr.length) {\n      case 0:\n        return 0;\n      case 1:\n        valueWithDecimalPlace = \".0\" + valueStr;\n        break;\n      default:\n        valueWithDecimalPlace =\n          valueStr.slice(0, valueStr.length - 2) +\n          \".\" +\n          valueStr.slice(valueStr.length - 2);\n    }\n    try {\n      return parseFloat(valueWithDecimalPlace);\n    } catch (e) {\n      return 0;\n    }\n  };\n\n  const keyPress = (keyValue: string) => {\n    let updatedNumpadString: string = numpadString;\n\n    if (keyValue === \"Del\") {\n      // Handle delete\n      if (numpadString.length >= 1) {\n        updatedNumpadString = updatedNumpadString.substring(\n          0,\n          updatedNumpadString.length - 1\n        );\n      }\n    } else {\n      updatedNumpadString = updatedNumpadString + keyValue;\n    }\n    // Parse the string into a float\n    setNumpadString(updatedNumpadString);\n    setNumpadValue(getFloatFromNumpadString(updatedNumpadString));\n  };\n\n  const itemSelected = (item: FoodItem) => {\n    console.log(\"Item selected!\", item);\n    props.addItemToCurrentOrder(item);\n  };\n\n  const voidLastItem = () => {\n    props.voidLastItem();\n  };\n\n  const resetNumpad = () => {\n    setNumpadValue(0);\n    setNumpadString(\"\");\n  };\n\n  const completeOrder = () => {\n    props.completeOrder();\n    resetNumpad();\n  };\n\n  return (\n    <>\n      <div className=\"screen\">\n        <div className=\"orders\">\n          <OrderDetails />\n        </div>\n        <div className=\"buttons\">\n          <div className=\"food-items\">\n            <FoodItems itemSelected={itemSelected} />\n            <ExtraButtons\n              itemVoid={() => voidLastItem()}\n              completeOrder={() => completeOrder()}\n            />\n          </div>\n          <div className=\"numpad\">\n            <Numpad keyPress={keyPress} />\n          </div>\n        </div>\n        <div className=\"totals\">\n          <div id=\"total\">Total: {props.order.total}</div>\n          <div id=\"change-due\">Change: {props.order.change}</div>\n          <div id=\"cash\">Cash: {numpadValue}</div>\n          <div id=\"pay-now\">\n            <Button\n              onClick={() => {\n                // Process the payment\n                props.processPayment(numpadValue);\n              }}\n              className=\"pay-now-button\"\n            >\n              Pay Now\n            </Button>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { Component } from \"react\";\nimport { Provider } from \"react-redux\";\nimport { createStore, Store } from \"redux\";\nimport { rootReducer } from \"./reducers/rootReducer\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport TimsRegister from \"./containers/TimsRegister\";\n\nclass App extends Component {\n  private store: Store;\n\n  constructor(props: any) {\n    super(props);\n    this.store = createStore(rootReducer);\n  }\n\n  public render() {\n    return (\n      <div className=\"container\">\n        <Provider store={this.store}>\n          <TimsRegister />\n        </Provider>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}